<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ #%L
  ~ nazgul-tools-validation-api
  ~ %%
  ~ Copyright (C) 2010 - 2015 jGuru Europe AB
  ~ %%
  ~ Licensed under the jGuru Europe AB license (the "License"), based
  ~ on Apache License, Version 2.0; you may not use this file except
  ~ in compliance with the License.
  ~
  ~ You may obtain a copy of the License at
  ~
  ~        http://www.jguru.se/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~ #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    ################################################
    # Section 1:  Project information
    ################################################
    -->
    <parent>
        <groupId>se.jguru.nazgul.tools.poms</groupId>
        <artifactId>nazgul-tools-parent</artifactId>
        <version>6.0.2-SNAPSHOT</version>
        <relativePath>../../poms/tools-parent</relativePath>
    </parent>

    <groupId>se.jguru.nazgul.tools.validation.api</groupId>
    <artifactId>nazgul-tools-validation-api</artifactId>
    <name>${project.artifactId}</name>
    <url>${site.top.url}/${path.in.reactor}</url>
    <description>Nazgul Tools: Validation (API, version ${project.version})</description>

    <properties>
        <path.in.reactor>validation/validation-api</path.in.reactor>
    </properties>

    <!--
    ################################################
    # Section 2:  Dependency (management) settings
    ################################################
    -->
    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
    ################################################
    # Section 3:  Build settings
    ################################################
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <configuration>
                    <instrumentation>
                        <includes>
                            <include>se/jguru/nazgul/tools/validation/**/*.class</include>
                        </includes>
                        <excludes>
                            <!-- Don't check Exception classes -->
                            <exclude>se/jguru/nazgul/**/*Exception.class</exclude>

                            <!-- Don't weave aspects already woven by AspectJ. -->
                            <exclude>se/jguru/nazgul/tools/validation/aspect/**/*Aspect.class</exclude>
                        </excludes>
                    </instrumentation>
                    <check>
                        <branchRate>65</branchRate>
                        <lineRate>80</lineRate>
                        <haltOnFailure>${cobertura.haltOnFailure}</haltOnFailure>
                    </check>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>clean</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                Note! AspectJ and Cobertura plugins clash WRT instrumentation of test classes.
                Therefore, one must remove the overall test-compile goal from this (global)
                AspectJ plugin definition, and overwrite this plugin definition (using the
                here commented-out test-compile goal) in projects where weaving is required in
                the testcases.

                When overriding this plugin definition in subprojects, you should likely be
                required to override Cobertura's exclude definitions for certain inner classes
                as well.

                // Lennart, 2011-06-27
            -->
            <!-- plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <configuration>
                    <XaddSerialVersionUID>true</XaddSerialVersionUID>
                    <showWeaveInfo>true</showWeaveInfo>
                </configuration>
            </plugin -->

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Export-Package>{local-packages}</Export-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--
    ################################################
    # Section 4:  External systems
    ################################################
    -->

    <!--
        Compensate for Maven standard variable extrapolation.
        Git requires steady URLs (... but Subversion requires path extrapolation, hence the problem).
     -->
    <distributionManagement>
        <site>
            <id>github_site</id>
            <name>GitHub Site for Nazgul Tools</name>
            <url>${site.top.url}/${path.in.reactor}</url>
        </site>
    </distributionManagement>

    <!--
        Define connections for Maven's VCS integration.
    -->
    <scm>
        <connection>${scm.connection.url}</connection>
        <developerConnection>${scm.devConnection.url}</developerConnection>
        <url>${scm.url}</url>
        <tag>HEAD</tag>
    </scm>
</project>
