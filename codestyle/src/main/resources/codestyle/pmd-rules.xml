<?xml version="1.0"?>
<!--
  ~ #%L
  ~ nazgul-tools-validation-api
  ~ %%
  ~ Copyright (C) 2010 - 2013 jGuru Europe AB
  ~ %%
  ~ Licensed under the jGuru Europe AB license (the "License"), based
  ~ on Apache License, Version 2.0; you may not use this file except
  ~ in compliance with the License.
  ~
  ~ You may obtain a copy of the License at
  ~
  ~        http://www.jguru.se/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~ #L%
  -->

<ruleset name="Nazgul Tools PMD Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <description>Nazgul Tools PMD rules</description>
    <exclude-pattern>.*/src/test/.*</exclude-pattern>
    <exclude-pattern>.*/target/.*</exclude-pattern>

    <!--
        Rule priority definitions:

        1: Change absolutely required. Behavior is critically broken/buggy.
        2: Change highly recommended. Behavior is quite likely to be broken/buggy.
        3: Change recommended. Behavior is confusing, perhaps buggy, and/or against standards/best practices.
        4: Change optional. Behavior is not likely to be buggy, but more just flies in the face of standards/style/good taste.
        5: Change highly optional. Nice to have, such as a consistent naming policy for package/class/fields...
    -->

    <rule ref="rulesets/java/basic.xml"/>
    <rule ref="rulesets/java/unusedcode.xml"/>

    <!--
        Class design checks.
    -->
    <rule ref="rulesets/java/design.xml/CloseResource">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/EqualsNull">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/IdempotentOperations">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/PreserveStackTrace">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SingularField">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyConditional">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
        <priority>3</priority>
    </rule>

    <!--
    <rule ref="rulesets/java/basic.xml/UnusedNullCheckInEquals">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/EmptySwitchStatements">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/strings.xml/StringInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseIndexOfChar">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
        <priority>3</priority>
    </rule>


    <rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/coupling.xml/LooseCoupling">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/EmptySynchronizedBlock">
        <priority>2</priority>
    </rule>

    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/EmptyWhileStmt">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/UselessOperationOnImmutable">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/UselessOverridingMethod">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedModifier">
        <priority>5</priority>
    </rule>

    <rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/EmptyIfStmt">
        <priority>2</priority>
    </rule>

    <rule ref="rulesets/java/basic.xml/BrokenNullCheck">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/InefficientStringBuffering">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/ClassNamingConventions">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/DontImportSun">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/DontImportJavaLang">
        <priority>4</priority>
    </rule>

    <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringToString">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssMethodCount">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="50"/>
        </properties>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssTypeCount">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="800"/>
        </properties>
    </rule>

    <rule ref="rulesets/java/basic.xml/EmptyFinallyBlock">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/IntegerInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/EmptyTryBlock">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
        <priority>3</priority>
    </rule>

    <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/EmptyStaticInitializer">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseStringBufferLength">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/SystemPrintln">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UselessStringValueOf">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
        <priority>3</priority>
    </rule>
    -->
</ruleset>
